{"version":3,"sources":["style.scss","style.css","../../assets/scss/abstract/_variables.scss","../../assets/scss/abstract/_mixins.scss"],"names":[],"mappings":"AAGA;EACI,kBAAA;EACA,qBAAA;EACA,4BAAA;CCFH;ADIG;EACI,qBAAA;EAAA,qBAAA;EAAA,cAAA;EACA,0BAAA;EAAA,uBAAA;EAAA,oBAAA;EACA,SAAA;EACA,oBAAA;EACA,mBAAA;CCFP;ADKG;EACI,kBAAA;CCHP;ADMG;EACI,gBAAA;EACA,2BAAA;EACA,eEnBA;EFoBA,8BAAA;CCJP;AEmDG;EH1CQ;IACI,cAAA;GCNb;CACF;AEgBG;EHtCJ;IAiCQ,kBAAA;IACA,qBAAA;GCPL;EDSK;IACI,0BAAA;IACA,gBAAA;IACA,eAAA;IACA,uBAAA;IACA,mBAAA;GCPT;EDUK;IACI,uBAAA;GCRT;EDWK;IACI,0BAAA;IACA,mBAAA;IACA,gBAAA;IACA,iBAAA;GCTT;EDWS;IACI,iBAAA;GCTb;EDYS;IACI,eAAA;GCVb;CACF;;AEMG;EHSJ;IAEQ,6EAAA;GCZL;CACF","file":"style.min.css","sourcesContent":["@import '../../assets/scss/abstract/variables';\n@import '../../assets/scss/abstract/mixins';\n\n.lume-text-slider {\n    padding-top: 30px;\n    padding-bottom: 30px;\n    background-position: center;\n    \n    .slick-track {\n        display: flex;\n        align-items: center;\n        gap: 3em;\n        margin-right: -25px;\n        margin-left: -25px;\n    }\n\n    .slick-list {\n        overflow: visible;\n    }\n\n    &__text {\n        font-size: 40px;\n        font-family: 'juana-light';\n        color: $balsa;\n        display: list-item !important;\n    }\n\n    @include respond-to(md-up) {\n        &__text {\n            br {\n                display: none;\n            }\n        }\n    }\n\n    @include respond-to(sm-down) {\n        padding-top: 60px;\n        padding-bottom: 60px;\n\n        .slick-track {\n            display: block !important;\n            margin-right: 0;\n            margin-left: 0;\n            width: 100% !important;\n            text-align: center;\n        }\n\n        .slick-slide {\n            float: none !important;\n        }\n\n        &__text {\n            display: block !important;\n            text-align: center;\n            font-size: 20px;\n            line-height: 1.3;\n\n            & ~ .lume-text-slider__text {\n                margin-top: 2rem;\n            }\n\n            br {\n                display: block;\n            }\n        }\n    }\n}\n\n.slider-mobile-bg{\n    @include respond-to(md-down) {\n        background-image: url('../../assets/images/mobile-slider-bg.png') !important;\n    }\n}",".lume-text-slider {\n  padding-top: 30px;\n  padding-bottom: 30px;\n  background-position: center;\n}\n.lume-text-slider .slick-track {\n  display: flex;\n  align-items: center;\n  gap: 3em;\n  margin-right: -25px;\n  margin-left: -25px;\n}\n.lume-text-slider .slick-list {\n  overflow: visible;\n}\n.lume-text-slider__text {\n  font-size: 40px;\n  font-family: \"juana-light\";\n  color: #eee8db;\n  display: list-item !important;\n}\n@media screen and (min-width: 768px) {\n  .lume-text-slider__text br {\n    display: none;\n  }\n}\n@media screen and (max-width: 767px) {\n  .lume-text-slider {\n    padding-top: 60px;\n    padding-bottom: 60px;\n  }\n  .lume-text-slider .slick-track {\n    display: block !important;\n    margin-right: 0;\n    margin-left: 0;\n    width: 100% !important;\n    text-align: center;\n  }\n  .lume-text-slider .slick-slide {\n    float: none !important;\n  }\n  .lume-text-slider__text {\n    display: block !important;\n    text-align: center;\n    font-size: 20px;\n    line-height: 1.3;\n  }\n  .lume-text-slider__text ~ .lume-text-slider__text {\n    margin-top: 2rem;\n  }\n  .lume-text-slider__text br {\n    display: block;\n  }\n}\n\n@media screen and (max-width: 991px) {\n  .slider-mobile-bg {\n    background-image: url(\"../../assets/images/mobile-slider-bg.png\") !important;\n  }\n}","$white: #ffffff;\n$black: #000000;\n$sage: #B3CD96;\n$evergreen: #233C29;\n$balsa: #eee8db;\n$burlwood: #804431;\n$ash: #5C564D;\n$driftwood: #807259;\n$beechwood: #B48E65;\n$cream: #f1ebdb;\n$charcoal: #2F2F2F;\n\n$base-url: '../' !default;","@mixin on-event($self: false) {\n    @if $self{\n     &,\n     &:active,\n     &:focus,\n     &:hover {\n       @content;\n     }\n   }\n   @else {\n     &:active,\n     &:focus,\n     &:hover {\n       @content;\n     }\n   }\n }\n \n @mixin when-inside($context) {\n   #{$context} & {\n     @content;\n   }\n }\n @mixin font-face($fontFamily, $path, $fileName, $svgLabel, $fontWeight: normal, $fontStyle: normal) {\n    @font-face{\n     font-family: $fontFamily;\n     src: url('#{$path + $fileName}.eot');\n     src: url('#{$path + $fileName}.eot?#iefix') format('embedded-opentype'), url('#{$path + $fileName}.woff') format('woff'), url('#{$path + $fileName}.ttf') format('truetype'), url('#{$path + $fileName}.svg##{$svgLabel}') format('svg');\n     font-weight: $fontWeight;\n     font-style: $fontStyle;\n     font-display: swap;\n   }\n }\n @mixin respond-to($breakpoint) {\n  @if $breakpoint == \"xs\" {\n    @media screen and (max-width: 575px) {\n      @content;\n    }\n  }\n\n  @else if $breakpoint == \"sm-down\" {\n    @media screen and (max-width: 767px) {\n      @content;\n    }\n  }\n\n  @else if $breakpoint == \"sm\" {\n    @media (min-width: 576px) and (max-width: 767px) {\n      @content;\n    }\n  }\n\n  @else if $breakpoint == \"sm-up\" {\n    @media screen and (min-width: 576px) {\n      @content;\n    }\n  }\n\n  @else if $breakpoint == \"md-down\" {\n    @media screen and (max-width: 991px) {\n      @content;\n    }\n  }\n\n  @else if $breakpoint == \"md\" {\n    @media (min-width: 768px) and (max-width: 991px) {\n      @content;\n    }\n  }\n\n  @else if $breakpoint == \"md-up\" {\n    @media screen and (min-width: 768px) {\n      @content;\n    }\n  }\n\n  @else if $breakpoint == \"lg-down\" {\n    @media screen and (max-width: 1199px) {\n      @content;\n    }\n  }\n\n  @else if $breakpoint == \"lg\" {\n    @media (min-width: 992px) and (max-width: 1199px) {\n      @content;\n    }\n  }\n \n  @else if $breakpoint == \"lg-up\" {\n    @media screen and (min-width: 992px) {\n      @content;\n    }\n  }\n \n  @else if $breakpoint == \"xl\" {\n    @media screen and (min-width: 1200px) {\n      @content;\n    }\n  }\n\n  @else if $breakpoint == \"xxl\" {\n    @media screen and (min-width: 1400px) {\n      @content;\n    }\n  }\n}\n\n@mixin placeholder() {\n    &::-webkit-input-placeholder {@content}\n    &:-moz-placeholder           {@content}\n    &::-moz-placeholder          {@content}\n    &:-ms-input-placeholder      {@content}\n}\n  "]}